var searchIndex = JSON.parse('{\
"async_deadpool_redis_session":{"doc":"Library which implements async session for deadpool redis …","t":"NNENDCLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["DeadPoolConfig","DeadpoolBuild","Error","NonAlphaNumeric","RedisSessionStore","async_session","borrow","borrow","borrow_mut","borrow_mut","clear_store","clone","clone_into","deadpool_redis","destroy_session","fmt","fmt","fmt","from","from","from","from","from_connection_info","from_url","into","into","load_session","new","source","store_session","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_prefix"],"q":[[0,"async_deadpool_redis_session"],[41,"core::future::future"],[42,"alloc::boxed"],[43,"core::pin"],[44,"async_session::session"],[45,"core::fmt"],[46,"core::fmt"],[47,"deadpool_redis"],[48,"core::result"],[49,"deadpool_redis::config"],[50,"alloc::string"],[51,"deadpool_redis"],[52,"core::option"],[53,"core::any"]],"d":["dead pool redis config error","dead pool redis build error","Error enum","error for non alphanumeric or underscore character","Struct for deadpool pool store","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Create new deadpool store from connection info","Create new deadpool store from url","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create new deadpool redis store from redis pool","","","","","","","","","","","","","Set prefix of pool consume redis session store and return …"],"i":[7,7,0,7,0,0,7,1,7,1,1,1,1,0,1,7,7,1,7,7,7,1,1,1,7,1,1,1,7,1,1,7,7,1,7,1,7,1,7,1,1],"f":[0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,[[4,[[3,[2]]]]]],[1,1],[[-1,-2],5,[],[]],0,[[1,6],[[4,[[3,[2]]]]]],[[7,8],9],[[7,8],9],[[1,8],9],[-1,-1,[]],[10,7],[11,7],[-1,-1,[]],[-1,[[12,[1,7]]],[[14,[13]]]],[-1,[[12,[1,7]]],[[14,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,15],[[4,[[3,[2]]]]]],[16,1],[7,[[18,[17]]]],[[1,6],[[4,[[3,[2]]]]]],[-1,-2,[],[]],[-1,15,[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,-1],[[12,[1,7]]],[[14,[15]]]]],"c":[],"p":[[3,"RedisSessionStore",0],[8,"Future",41],[3,"Box",42],[3,"Pin",43],[15,"tuple"],[3,"Session",44],[4,"Error",0],[3,"Formatter",45],[6,"Result",45],[4,"ConfigError",46],[6,"BuildError",47],[4,"Result",48],[3,"ConnectionInfo",46],[8,"Into",49],[3,"String",50],[6,"Pool",47],[8,"Error",51],[4,"Option",52],[3,"TypeId",53]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
